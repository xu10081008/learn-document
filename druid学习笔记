1. tranquility程序注意

本项目安装：
node install webpack-dev-server

2. 本地启动项目：node run dev
    webpack-dev-server --host ip
    
Filter.onAccessDenied
1. AuthenticatingFilter.executeLogin
    1.1 createToken：该方法一般需要重写,重写filter
    1.2 Subject subject = getSubject(request, response);创建subject
    1.3 subject.login(token);
        DelegatingSubject
        1.3.1 Subject subject = securityManager.login(this, token);
            1.3.1.1 ModularRealmAuthenticator.doSingleRealmAuthentication
                       AuthenticationInfo info = realm.getAuthenticationInfo(token);
                            AuthenticationInfo info = getCachedAuthenticationInfo(token);
                            info = doGetAuthenticationInfo(token);自定义的Realm，重写登录方法
    1.4 onLoginSuccess(token, subject, request, response);重写filter该方法，在此处实现跳转
@Override
    protected boolean onLoginSuccess(AuthenticationToken token, Subject subject,
            ServletRequest request, ServletResponse response) throws Exception {
        //issueSuccessRedirect(request, response);
        //we handled the success redirect directly, prevent the chain from continuing:
        HttpServletRequest httpServletRequest = (HttpServletRequest)request;
        HttpServletResponse httpServletResponse = (HttpServletResponse)response;

        if (!"XMLHttpRequest".equalsIgnoreCase(httpServletRequest.getHeader("X-Requested-With")) 
                || request.getParameter("ajax") == null) {// 不是ajax请求
            httpServletResponse.sendRedirect(httpServletRequest.getContextPath() + this.getSuccessUrl());
        } else {
            httpServletRequest.getRequestDispatcher("/login/timeout/success").forward(httpServletRequest, httpServletResponse);
        }

        return false;
    }；

    
